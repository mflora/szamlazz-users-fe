{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "UsersService",
            "id": "injectable-UsersService-1d7912eef2d9cebf93e891ada737bfb7cce266456a45d825f04758cc80e9653fc2f0a37c636be8641c1e85a578e12233c8fb151b7ae75aa72b4f93fdb4f17955",
            "file": "src/services/users.service.ts",
            "properties": [
                {
                    "name": "BASE_PATH",
                    "defaultValue": "\"http://localhost:8888/api/users\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "httpOptions",
                    "defaultValue": "{\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods': 'DELETE, POST, GET, OPTIONS',\r\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization, X-Requested-With',\r\n      'withCredentials': 'true'\r\n    }),\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methods": [
                {
                    "name": "deleteUser",
                    "args": [
                        {
                            "name": "userId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "userId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "listUsers",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "saveUser",
                    "args": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<User>",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateUser",
                    "args": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<User>",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {User} from \"../../types/User\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n\r\n  BASE_PATH= \"http://localhost:8888/api/users\";\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods': 'DELETE, POST, GET, OPTIONS',\r\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization, X-Requested-With',\r\n      'withCredentials': 'true'\r\n    }),\r\n  };\r\n  constructor(private http: HttpClient) { }\r\n\r\n  saveUser(user: User): Observable<User>{\r\n    return this.http.post<User>(this.BASE_PATH, user, this.httpOptions);\r\n  }\r\n\r\n  updateUser(user: User): Observable<User> {\r\n    return this.http.put<User>(`${this.BASE_PATH}/${user.id}`, user, this.httpOptions);\r\n  }\r\n\r\n  listUsers(): Observable<any> {\r\n    return this.http.get(this.BASE_PATH, this.httpOptions);\r\n  }\r\n\r\n  deleteUser(userId: number): Observable<any> {\r\n    return this.http.delete(`${this.BASE_PATH}/${userId}`, this.httpOptions);\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-43518d1de6822a235cdd4e7de9f139d165441fc91a035723d3fede36e672f6b0f532bed092e5ff43263f2cfff9e25629cadfe9e3a1fc508f83fba3968cd40e2a",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'users-fe'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport {UsersService} from \"../services/users.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [RouterOutlet],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.scss'\r\n})\r\nexport class AppComponent {\r\n  title = 'users-fe';\r\n\r\n  constructor(users: UsersService) {\r\n    // users.saveUser({firstName: 'Flora', lastName: 'Mikola', active:true, job: 'KERTESZ', address: '7800 Siklos, Harkanyi ut 29/a', telephone: '+36206667320'})\r\n    //   .subscribe(data => console.log(data));\r\n    // console.log(users.listUsers().subscribe());\r\n  }\r\n}\r\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "users",
                        "type": "UsersService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "users",
                        "type": "UsersService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<router-outlet />\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-19b6ebac3556126b38d664947c8f5334dd8d56c1b2c9da5def28489f2434acf38134bdc1346c6ff0245eb504b626b5deb3d559fc937dc7428701cb451e0b62d3",
            "file": "src/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "buttonStyle",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe color schema of the button\n",
                    "description": "<p>The color schema of the button</p>\n",
                    "line": 40,
                    "type": "\"primary\" | \"secondary\" | \"secondary-ghost\"",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "iconName",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nName of the FontAwesomeIcon you can find the icons here: https://fontawesome.com/icons\n",
                    "description": "<p>Name of the FontAwesomeIcon you can find the icons here: <a href=\"https://fontawesome.com/icons\">https://fontawesome.com/icons</a></p>\n",
                    "line": 34,
                    "type": "IconDefinition | null",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThis string will appear as the button's label. If empty, an icon button will appear.\n",
                    "description": "<p>This string will appear as the button&#39;s label. If empty, an icon button will appear.</p>\n",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "\"button\" | \"submit\" | \"reset\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nClick event for the button.\n",
                    "description": "<p>Click event for the button.</p>\n",
                    "line": 28,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgClass"
                },
                {
                    "name": "FaIconComponent",
                    "type": "component"
                },
                {
                    "name": "NgIf"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, Output} from '@angular/core';\r\nimport {NgClass, NgIf} from \"@angular/common\";\r\nimport {FaIconComponent} from \"@fortawesome/angular-fontawesome\";\r\nimport { IconDefinition} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n@Component({\r\n  selector: 'app-button',\r\n  standalone: true,\r\n  imports: [\r\n    NgClass,\r\n    FaIconComponent,\r\n    NgIf\r\n  ],\r\n  templateUrl: './button.component.html',\r\n  styleUrl: './button.component.scss'\r\n})\r\nexport class ButtonComponent {\r\n  /**\r\n   * This string will appear as the button's label. If empty, an icon button will appear.\r\n   * */\r\n  @Input()\r\n  label = '';\r\n\r\n  /**\r\n   * Click event for the button.\r\n   * */\r\n  @Output()\r\n  onClick = new EventEmitter();\r\n\r\n  /**\r\n   * Name of the FontAwesomeIcon you can find the icons here: https://fontawesome.com/icons\r\n   * */\r\n  @Input()\r\n  iconName:IconDefinition | null = null;\r\n\r\n  /**\r\n   * The color schema of the button\r\n   */\r\n  @Input()\r\n  buttonStyle: 'primary' | 'secondary' | 'secondary-ghost' = 'primary'\r\n\r\n  @Input()\r\n  disabled = false;\r\n\r\n  @Input()\r\n  type: 'button' | 'submit' | 'reset' = 'button'\r\n\r\n\r\n}\r\n",
            "styleUrl": "./button.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<button (click)=\"onClick.emit()\"\r\n        class=\"btn-container\"\r\n        [ngClass]=\"[label ? buttonStyle : 'icon-button']\"\r\n        [disabled]=\"disabled\"\r\n        [type]=\"type\"\r\n>\r\n  <fa-icon *ngIf=\"iconName !== null\" [icon]=\"iconName\" class=\"icon\"></fa-icon>{{label}}\r\n</button>\r\n\r\n\r\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-97446ffc2058e1a9cd7e31645a89ab7518292e7c1ff53e5c32a38fa96d0f9a620d11857de0b8a3e2646b83090a0610ffcb653991c1104643ae7acd0a5ac086bf",
            "file": "src/components/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCheckedChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "checkedChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, Output} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-checkbox',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrl: './checkbox.component.scss'\r\n})\r\nexport class CheckboxComponent {\r\n  @Input()\r\n  checked = false;\r\n\r\n  @Output()\r\n  onCheckedChange = new EventEmitter<boolean>();\r\n\r\n  checkedChange() {\r\n    this.checked = ! this.checked;\r\n    this.onCheckedChange.emit(this.checked);\r\n  }\r\n}\r\n",
            "styleUrl": "./checkbox.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<input type=\"checkbox\" [checked]=\"checked\" (change)=\"checkedChange()\"/>\r\n"
        },
        {
            "name": "CreateUserComponent",
            "id": "component-CreateUserComponent-bd9f05a0763160218d5125531837e1395a499c4220ae558b6f055d7aeb6beb79fb162e5712edb0aa908b7c9e13e0b63f3a4d9ce01c02d1cfb6c00d944a1ab30e",
            "file": "src/pages/create-user/create-user.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-create-user",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./create-user.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "address",
                    "defaultValue": "new FormControl('', [Validators.maxLength(128)])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "createUserForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "firstName",
                    "defaultValue": "new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(64)])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "job",
                    "defaultValue": "new FormControl('', Validators.required)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "lastName",
                    "defaultValue": "new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(64)])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "telephone",
                    "defaultValue": "new FormControl('', [Validators.maxLength(128), Validators.pattern('^(?:06|\\\\+36|0036)\\\\d{8,9}$')])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "createUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateToUserList",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "InputComponent",
                    "type": "component"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\r\nimport {InputComponent} from \"../../components/input/input.component\";\r\nimport {ButtonComponent} from \"../../components/button/button.component\";\r\nimport {UsersService} from \"../../services/users.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {FormBuilder, FormControl, FormGroup, ReactiveFormsModule, Validators} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-create-user',\r\n  standalone: true,\r\n  imports: [\r\n    InputComponent,\r\n    ButtonComponent,\r\n    ReactiveFormsModule\r\n  ],\r\n  templateUrl: './create-user.component.html',\r\n  styleUrl: './create-user.component.scss'\r\n})\r\nexport class CreateUserComponent{\r\n  createUserForm: FormGroup;\r\n\r\n  firstName = new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(64)]);\r\n  lastName = new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(64)]);\r\n  address = new FormControl('', [Validators.maxLength(128)]);\r\n  telephone = new FormControl('', [Validators.maxLength(128), Validators.pattern('^(?:06|\\\\+36|0036)\\\\d{8,9}$')]);\r\n  job = new FormControl('', Validators.required);\r\n\r\n  constructor(private usersService: UsersService, private router: Router, private formBuilder: FormBuilder) {\r\n    this.createUserForm = this.formBuilder.group({\r\n      firstName: this.firstName,\r\n      lastName: this.lastName,\r\n      address: this.address,\r\n      telephone: this.telephone,\r\n      job: this.job\r\n    })\r\n  }\r\n\r\n  navigateToUserList() {\r\n    this.router.navigateByUrl('');\r\n  }\r\n\r\n  createUser() {\r\n    let user = this.createUserForm.value;\r\n    user.active = true;\r\n    this.usersService.saveUser(user).subscribe(() => this.navigateToUserList());\r\n  }\r\n}\r\n",
            "styleUrl": "./create-user.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "usersService",
                        "type": "UsersService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "usersService",
                        "type": "UsersService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"container\">\r\n  <div class=\"title\">Új felhasználó hozzáadása</div>\r\n  <form [formGroup]=\"createUserForm\">\r\n    <app-input [label]=\"'Vezetéknév'\" [control]=\"lastName\"/>\r\n    <app-input [label]=\"'Keresztnév'\" [control]=\"firstName\"/>\r\n    <app-input [label]=\"'Cím'\" [control]=\"address\"/>\r\n    <app-input [label]=\"'Telefon'\" [control]=\"telephone\"/>\r\n    <app-input [label]=\"'Foglalkozás'\" [control]=\"job\"/>\r\n    <!--TODO: foglalkozas dropdown-->\r\n    <div class=\"buttons-container\">\r\n      <app-button [label]=\"'Létrehozás'\" (onClick)=\"createUser()\" [disabled]=\"createUserForm.invalid\"/>\r\n      <app-button [label]=\"'Mégsem'\" [buttonStyle]=\"'secondary'\" (onClick)=\"navigateToUserList()\"/>\r\n    </div>\r\n  </form>\r\n</div>\r\n"
        },
        {
            "name": "DropdownComponent",
            "id": "component-DropdownComponent-5973716ac7f2b6b50572e4a3eb7829212da98ce7da48cad6d7204c4d2978148c10888078ad055f98f3a50527c1c3fe71c719d46adc7b5f02fa2b5acdb0039621",
            "file": "src/components/dropdown/dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dropdown.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dropdown',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './dropdown.component.html',\r\n  styleUrl: './dropdown.component.scss'\r\n})\r\nexport class DropdownComponent {\r\n\r\n}\r\n",
            "styleUrl": "./dropdown.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<select>\r\n  <option value=\"ASD\">Asd</option>\r\n  <option value=\"DDD\">Ddd</option>\r\n</select>\r\n"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-dba3f0df81a466ee76c55147cabb6691434c0caec7dd96e12fca7e2ab9020b63978874a25e5993913b3ec1401ad811a5ec6c62749f2829c45da15bbca5e4d473",
            "file": "src/components/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "control",
                    "defaultValue": "new FormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "\"text\" | \"email\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<string>",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "valueSubject",
                    "defaultValue": "new BehaviorSubject<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<string>",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "applyContainerBlur",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "makeBlurred",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "makeFocused",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onInput",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "valueChangeHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "NgClass"
                },
                {
                    "name": "NgIf"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  EventEmitter,\r\n  Input, OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport {BehaviorSubject, debounceTime,} from \"rxjs\";\r\nimport {FormControl, FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {NgClass, NgIf} from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: 'app-input',\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgClass,\r\n    NgIf\r\n  ],\r\n  templateUrl: './input.component.html',\r\n  styleUrl: './input.component.scss'\r\n})\r\nexport class InputComponent implements OnInit, OnDestroy {\r\n\r\n  private valueSubject: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n\r\n  @Input()\r\n  type: 'text' | 'email' = 'text';\r\n  @Input()\r\n  label = 'Label';\r\n  @Input()\r\n  disabled = false;\r\n  @Input()\r\n  name = '';\r\n  @Input()\r\n  control = new FormControl('');\r\n\r\n  @Output()\r\n  valueChange = new EventEmitter<string>;\r\n\r\n  ngOnInit(): void {\r\n    this.valueSubject.pipe(debounceTime(500))\r\n      .subscribe(() => {\r\n        this.valueChangeHandler();\r\n      });\r\n  }\r\n\r\n  get value(): string{\r\n    return this.control.value!;\r\n  }\r\n\r\n  set value(val: string) {\r\n    this.control.setValue(val);\r\n    this.valueChange.emit(val);\r\n  }\r\n\r\n  onInput(){\r\n    this.valueSubject.next(this.value);\r\n  }\r\n  valueChangeHandler() {\r\n    this.valueChange.emit(this.value);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.valueSubject.complete();\r\n  }\r\n\r\n  makeFocused($event: any) {\r\n    $event.currentTarget.classList.add('focused');\r\n  }\r\n\r\n  makeBlurred($event: any) {\r\n    $event.currentTarget.classList.remove('focused');\r\n  }\r\n\r\n  applyContainerBlur($event: any) {\r\n    $event.target.parentNode.classList.remove('focused');\r\n  }\r\n}\r\n",
            "styleUrl": "./input.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "val",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 53,
                        "jsdoctags": [
                            {
                                "name": "val",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "string",
                        "returnType": "string",
                        "line": 49
                    }
                }
            },
            "templateData": "<div class=\"input-container\" (click)=\"makeFocused($event)\"\r\n     (blur)=\"makeBlurred($event)\"\r\n     tabindex=\"1\"\r\n     [ngClass]=\"control.invalid && control.touched ? 'invalid-input' : ''\"\r\n     #container\r\n>\r\n  <div>{{label}}</div>\r\n  <input [type]=\"type\"\r\n         [disabled]=\"disabled\"\r\n         (input)=\"onInput()\"\r\n         tabindex=\"1\"\r\n         (blur)=\"applyContainerBlur($event)\"\r\n         [formControl]=\"control\"\r\n  />\r\n</div>\r\n<div class=\"error-messages\">\r\n  <div *ngIf=\"control.invalid && control.touched && control.errors?.['required']\">A mező kitöltése kötelező</div>\r\n  <div *ngIf=\"control.invalid && control.touched && control.errors?.['minlength']\">A mező minimális\r\n    hossza {{ control.errors?.['minlength'].requiredLength }}\r\n  </div>\r\n  <div *ngIf=\"control.invalid && control.touched && control.errors?.['maxlength']\">A mező maximális\r\n    hossza {{ control.errors?.['maxlength'].requiredLength }}\r\n  </div>\r\n  <div *ngIf=\"control.invalid && control.touched && control.errors?.['pattern']\">Nem megfelelő formátum.</div>\r\n</div>\r\n"
        },
        {
            "name": "ModifyUserComponent",
            "id": "component-ModifyUserComponent-71fa1a3cbfa9a9fb7ff7cc28e864c361065bc7916ddb7c335230bc1093bc8b25b530b3fbb0518e836bdc83b584f4f12772398fc0fee87c1e121bc33b309cf877",
            "file": "src/pages/modify-user/modify-user.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-modify-user",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./modify-user.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-modify-user',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './modify-user.component.html',\r\n  styleUrl: './modify-user.component.scss'\r\n})\r\nexport class ModifyUserComponent {\r\n\r\n}\r\n",
            "styleUrl": "./modify-user.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>modify-user works!</p>\r\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-87421e08fba9627244e31ead6ce1c2235b553d9ce5c0acfd37814958efb12b2726d3d85c3c713522f453f8e5924a9ae27f032bea0f45275d9eb1103a71b5e7e6",
            "file": "src/components/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "actionButtons",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nArray of the buttons needed for the table actions.\n",
                    "description": "<p>Array of the buttons needed for the table actions.</p>\n",
                    "line": 31,
                    "type": "Array<IconDefinition> | null",
                    "decorators": []
                },
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe data of the table\n",
                    "description": "<p>The data of the table</p>\n",
                    "line": 25,
                    "type": "Array<object>",
                    "decorators": []
                },
                {
                    "name": "headers",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "Array<literal type>",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionButtonClicked",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits an event when one of the action buttons are clicked.\n",
                    "description": "<p>Emits an event when one of the action buttons are clicked.</p>\n",
                    "line": 37,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "faChevronLeft",
                    "defaultValue": "faChevronLeft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "faChevronRight",
                    "defaultValue": "faChevronRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 79,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "faCircleCheck",
                    "defaultValue": "faCircleCheck",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 108,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "faCircleXmark",
                    "defaultValue": "faCircleXmark",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 109,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "faFaceSadCry",
                    "defaultValue": "faFaceSadCry",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 77,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "faPlus",
                    "defaultValue": "faPlus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 76,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "getHeaders",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "headerKeys",
                    "defaultValue": "new Array<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "isBoolean",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "Math",
                    "defaultValue": "Math",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 107,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "Object",
                    "defaultValue": "Object",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "pageCounter",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "shownTableData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<object>",
                    "optional": false,
                    "description": "",
                    "line": 44
                }
            ],
            "methodsClass": [
                {
                    "name": "calculateRows",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "calculateTable",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isColumnNeeded",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "turnPage",
                    "args": [
                        {
                            "name": "pageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pageNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                },
                {
                    "name": "FaIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\r\nimport {faChevronLeft, faChevronRight, faPlus, IconDefinition} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {ButtonComponent} from \"../button/button.component\";\r\nimport {FaIconComponent} from \"@fortawesome/angular-fontawesome\";\r\nimport {faCircleCheck, faCircleXmark, faFaceSadCry} from \"@fortawesome/free-regular-svg-icons\";\r\n\r\n@Component({\r\n  selector: 'app-table',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ButtonComponent,\r\n    FaIconComponent\r\n  ],\r\n  templateUrl: './table.component.html',\r\n  styleUrl: './table.component.scss'\r\n})\r\nexport class TableComponent implements OnChanges, OnInit {\r\n\r\n  /**\r\n   * The data of the table\r\n   * */\r\n  @Input()\r\n  data: Array<object> = [];\r\n\r\n  /**\r\n   * Array of the buttons needed for the table actions.\r\n   */\r\n  @Input()\r\n  actionButtons: Array<IconDefinition> | null = null;\r\n\r\n  /**\r\n   * Emits an event when one of the action buttons are clicked.\r\n   */\r\n  @Output()\r\n  actionButtonClicked = new EventEmitter();\r\n\r\n  @Input()\r\n  headers: Array<{ key: string, displayName: string }>= [];\r\n\r\n  headerKeys = new Array<string>();\r\n  pageCounter = 0;\r\n  shownTableData: Array<object> = [];\r\n\r\n  ngOnChanges() {\r\n    this.calculateRows();\r\n    this.calculateTable();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(!this.headers) {\r\n      this.headers = this.getHeaders();\r\n    } else {\r\n      this.headerKeys = this.headers.map(header => {\r\n        return header.key;\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  getHeaders = () => {\r\n    this.headerKeys = Object.keys(this.data[0]);\r\n    return Object.keys(this.data[0] ?? []).map(item =>{\r\n      return {key: item, displayName: item}\r\n    });\r\n  }\r\n\r\n  isColumnNeeded(key: string): boolean {\r\n    return !!this.headerKeys.find(headerKey => headerKey === key);\r\n  }\r\n\r\n  isBoolean = (value: any) =>  {return typeof value === 'boolean'}\r\n\r\n  protected readonly Object = Object;\r\n  protected readonly faPlus = faPlus;\r\n  protected readonly faFaceSadCry = faFaceSadCry;\r\n  protected readonly faChevronLeft = faChevronLeft;\r\n  protected readonly faChevronRight = faChevronRight;\r\n\r\n  turnPage(pageNumber: number) {\r\n    this.pageCounter += pageNumber;\r\n    this.calculateTable();\r\n  }\r\n\r\n  calculateTable() {\r\n    const starterIndex = this.pageCounter * 5;\r\n    this.shownTableData = this.data.slice(starterIndex, starterIndex + 5);\r\n  }\r\n\r\n  calculateRows() {\r\n    let newData = [];\r\n\r\n\r\n    this.data.forEach(row => Object.keys(row)\r\n      .reduce((newObj, key) => {\r\n        // @ts-ignore\r\n        newObj[key] = this.headerKeys.find(hk => hk === key);\r\n        return newObj;\r\n      }, {})\r\n    );\r\n    console.log(this.data);\r\n  }\r\n\r\n\r\n\r\n  protected readonly Math = Math;\r\n  protected readonly faCircleCheck = faCircleCheck;\r\n  protected readonly faCircleXmark = faCircleXmark;\r\n}\r\n",
            "styleUrl": "./table.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnChanges",
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"data.length > 0; then table; else empty\"></ng-container>\r\n<ng-template #table>\r\n  <app-button [iconName]=\"faPlus\" [label]=\"'Létrehozás'\" (onClick)=\"actionButtonClicked.emit()\"/>\r\n  <table>\r\n    <thead>\r\n    <tr>\r\n      <th *ngFor=\"let header of headers\"> {{ header.displayName }}</th>\r\n      <th *ngIf=\"actionButtons\" [colSpan]=\"actionButtons.length\" class=\"actions\"> Műveletek</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr *ngFor=\"let row of shownTableData; let i = index\" [ngStyle]=\"{'visibility':Math.floor(i / 5) === pageCounter ? 'visible' : 'none'}\">\r\n      <td *ngFor=\"let cell of Object.values(row); let j = index\">\r\n        <div *ngIf=\"isColumnNeeded(Object.keys(row)[j])\">\r\n          <ng-container *ngIf=\"isBoolean(cell); then checkbox; else text;\">{{ cell }}</ng-container>\r\n          <ng-template #checkbox>\r\n            <fa-icon [icon]=\"cell ? faCircleCheck : faCircleXmark\" size=\"xl\"/>\r\n          </ng-template>\r\n          <ng-template #text>{{ cell }}</ng-template>\r\n        </div>\r\n      </td>\r\n      <td *ngFor=\"let action of actionButtons\">\r\n        <app-button [iconName]=\"action\" class=\"action-button\"/>\r\n      </td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n  <div class=\"pager\">\r\n    <app-button [iconName]=\"faChevronLeft\" (onClick)=\"turnPage((-1))\" [disabled]=\"pageCounter === 0\"/>\r\n    {{pageCounter + 1}}. oldal\r\n    <app-button [iconName]=\"faChevronRight\" (onClick)=\"turnPage(1)\" [disabled]=\"pageCounter === Math.floor(data.length / 5)\"/>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #empty>\r\n  <div class=\"empty\">\r\n    <fa-icon [icon]=\"faFaceSadCry\" size=\"8x\"/>\r\n    <b class=\"title\">Nincs felhasználó</b>\r\n    <p>Eddig még nincs egyetlen megjelenítendő felhasználó sem.</p>\r\n    <app-button [label]=\"'Új felhasználó hozzáadása'\" [iconName]=\"faPlus\" (onClick)=\"actionButtonClicked.emit()\"></app-button>\r\n  </div>\r\n</ng-template>\r\n"
        },
        {
            "name": "UserListComponent",
            "id": "component-UserListComponent-be6d1580aee7d140bf0097500b88a7ba0369ef59f8662d868975263d79a9cffad4b73729c49abfb7c784b9d28b813d5e0ce0a6d06feb72f27476d9db928f9ee7",
            "file": "src/pages/user-list/user-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./user-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "headers",
                    "defaultValue": "[\r\n    {key: 'lastName', displayName: 'Vezetéknév'},\r\n    {key: 'firstName', displayName: 'Keresztnév'},\r\n    {key: 'address', displayName: 'Cím'},\r\n    {key: 'telephone', displayName: 'Telefonszám'},\r\n    {key: 'job', displayName: 'Foglalkozás'},\r\n    {key: 'active', displayName: 'Aktív'},\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "users",
                    "defaultValue": "new Array<User>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "addNewUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "TableComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport {TableComponent} from \"../../components/table/table.component\";\r\nimport {UsersService} from \"../../services/users.service\";\r\nimport {User} from \"../../../types/User\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  standalone: true,\r\n  imports: [\r\n    TableComponent\r\n  ],\r\n  templateUrl: './user-list.component.html',\r\n  styleUrl: './user-list.component.scss'\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  users = new Array<User>();\r\n  headers: Array<{ key: string; displayName: string }> = [\r\n    {key: 'lastName', displayName: 'Vezetéknév'},\r\n    {key: 'firstName', displayName: 'Keresztnév'},\r\n    {key: 'address', displayName: 'Cím'},\r\n    {key: 'telephone', displayName: 'Telefonszám'},\r\n    {key: 'job', displayName: 'Foglalkozás'},\r\n    {key: 'active', displayName: 'Aktív'},\r\n  ];\r\n\r\n  constructor(private usersService: UsersService, private router : Router) {\r\n    // console.log(this.usersService.listUsers().subscribe());\r\n    this.usersService.listUsers().subscribe(value => this.users = value._embedded.users);\r\n\r\n  }\r\n    ngOnInit(): void {\r\n    // console.log(this.usersService.listUsers().subscribe());\r\n    //     this.usersService.listUsers().subscribe(value => this.users = value._embedded.users);\r\n        console.log(this.users);\r\n    }\r\n\r\n    addNewUser() {\r\n      this.router.navigateByUrl('create-user');\r\n    }\r\n\r\n}\r\n",
            "styleUrl": "./user-list.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "usersService",
                        "type": "UsersService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "usersService",
                        "type": "UsersService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-table [data]=\"users\" (actionButtonClicked)=\"addNewUser()\" [headers]=\"headers\"/>\r\n\r\n{{users}}\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [provideRouter(routes), provideHttpClient()]\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [provideRouter(routes), provideHttpClient()]\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 6,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 57,
                "coverageCount": "4/7",
                "status": "good"
            },
            {
                "filePath": "src/components/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/components/dropdown/dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/components/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/components/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 12,
                "coverageCount": "3/24",
                "status": "low"
            },
            {
                "filePath": "src/pages/create-user/create-user.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateUserComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/pages/modify-user/modify-user.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModifyUserComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/pages/user-list/user-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/services/users.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UsersService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            }
        ]
    }
}